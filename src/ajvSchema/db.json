{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "APIEmbed": {
      "additionalProperties": false,
      "description": "https://discord.com/developers/docs/resources/channel#embed-object-embed-structure\n\nLength limit: 6000 characters",
      "properties": {
        "author": {
          "$ref": "#/definitions/APIEmbedAuthor",
          "description": "Author information\n\nSee https://discord.com/developers/docs/resources/channel#embed-object-embed-author-structure"
        },
        "color": {
          "description": "Color code of the embed",
          "type": "number"
        },
        "description": {
          "description": "Description of embed\n\nLength limit: 4096 characters",
          "type": "string"
        },
        "fields": {
          "description": "Fields information\n\nLength limit: 25 field objects\n\nSee https://discord.com/developers/docs/resources/channel#embed-object-embed-field-structure",
          "items": {
            "$ref": "#/definitions/APIEmbedField"
          },
          "type": "array"
        },
        "footer": {
          "$ref": "#/definitions/APIEmbedFooter",
          "description": "Footer information\n\nSee https://discord.com/developers/docs/resources/channel#embed-object-embed-footer-structure"
        },
        "image": {
          "$ref": "#/definitions/APIEmbedImage",
          "description": "Image information\n\nSee https://discord.com/developers/docs/resources/channel#embed-object-embed-image-structure"
        },
        "provider": {
          "$ref": "#/definitions/APIEmbedProvider",
          "description": "Provider information\n\nSee https://discord.com/developers/docs/resources/channel#embed-object-embed-provider-structure"
        },
        "thumbnail": {
          "$ref": "#/definitions/APIEmbedThumbnail",
          "description": "Thumbnail information\n\nSee https://discord.com/developers/docs/resources/channel#embed-object-embed-thumbnail-structure"
        },
        "timestamp": {
          "description": "Timestamp of embed content",
          "type": "string"
        },
        "title": {
          "description": "Title of embed\n\nLength limit: 256 characters",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EmbedType",
          "deprecated": "*Embed types should be considered deprecated and might be removed in a future API version*\n\nSee https://discord.com/developers/docs/resources/channel#embed-object-embed-types",
          "description": "Type of embed (always \"rich\" for webhook embeds)"
        },
        "url": {
          "description": "URL of embed",
          "type": "string"
        },
        "video": {
          "$ref": "#/definitions/APIEmbedVideo",
          "description": "Video information\n\nSee https://discord.com/developers/docs/resources/channel#embed-object-embed-video-structure"
        }
      },
      "type": "object"
    },
    "APIEmbedAuthor": {
      "additionalProperties": false,
      "description": "https://discord.com/developers/docs/resources/channel#embed-object-embed-author-structure",
      "properties": {
        "icon_url": {
          "description": "URL of author icon (only supports http(s) and attachments)",
          "type": "string"
        },
        "name": {
          "description": "Name of author\n\nLength limit: 256 characters",
          "type": "string"
        },
        "proxy_icon_url": {
          "description": "A proxied url of author icon",
          "type": "string"
        },
        "url": {
          "description": "URL of author",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "APIEmbedField": {
      "additionalProperties": false,
      "description": "https://discord.com/developers/docs/resources/channel#embed-object-embed-field-structure",
      "properties": {
        "inline": {
          "description": "Whether or not this field should display inline",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the field\n\nLength limit: 256 characters",
          "type": "string"
        },
        "value": {
          "description": "Value of the field\n\nLength limit: 1024 characters",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "APIEmbedFooter": {
      "additionalProperties": false,
      "description": "https://discord.com/developers/docs/resources/channel#embed-object-embed-footer-structure",
      "properties": {
        "icon_url": {
          "description": "URL of footer icon (only supports http(s) and attachments)",
          "type": "string"
        },
        "proxy_icon_url": {
          "description": "A proxied url of footer icon",
          "type": "string"
        },
        "text": {
          "description": "Footer text\n\nLength limit: 2048 characters",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "type": "object"
    },
    "APIEmbedImage": {
      "additionalProperties": false,
      "description": "https://discord.com/developers/docs/resources/channel#embed-object-embed-image-structure",
      "properties": {
        "height": {
          "description": "Height of image",
          "type": "number"
        },
        "proxy_url": {
          "description": "A proxied url of the image",
          "type": "string"
        },
        "url": {
          "description": "Source url of image (only supports http(s) and attachments)",
          "type": "string"
        },
        "width": {
          "description": "Width of image",
          "type": "number"
        }
      },
      "required": [
        "url"
      ],
      "type": "object"
    },
    "APIEmbedProvider": {
      "additionalProperties": false,
      "description": "https://discord.com/developers/docs/resources/channel#embed-object-embed-provider-structure",
      "properties": {
        "name": {
          "description": "Name of provider",
          "type": "string"
        },
        "url": {
          "description": "URL of provider",
          "type": "string"
        }
      },
      "type": "object"
    },
    "APIEmbedThumbnail": {
      "additionalProperties": false,
      "description": "https://discord.com/developers/docs/resources/channel#embed-object-embed-thumbnail-structure",
      "properties": {
        "height": {
          "description": "Height of thumbnail",
          "type": "number"
        },
        "proxy_url": {
          "description": "A proxied url of the thumbnail",
          "type": "string"
        },
        "url": {
          "description": "Source url of thumbnail (only supports http(s) and attachments)",
          "type": "string"
        },
        "width": {
          "description": "Width of thumbnail",
          "type": "number"
        }
      },
      "required": [
        "url"
      ],
      "type": "object"
    },
    "APIEmbedVideo": {
      "additionalProperties": false,
      "description": "https://discord.com/developers/docs/resources/channel#embed-object-embed-video-structure",
      "properties": {
        "height": {
          "description": "Height of video",
          "type": "number"
        },
        "proxy_url": {
          "description": "A proxied url of the video",
          "type": "string"
        },
        "url": {
          "description": "Source url of video",
          "type": "string"
        },
        "width": {
          "description": "Width of video",
          "type": "number"
        }
      },
      "type": "object"
    },
    "AdWarn": {
      "additionalProperties": false,
      "properties": {
        "channel": {
          "type": "string"
        },
        "message_template": {
          "anyOf": [
            {
              "$ref": "#/definitions/Message"
            },
            {
              "type": "null"
            }
          ]
        },
        "send_dm": {
          "type": "boolean"
        },
        "status": {
          "type": "boolean"
        }
      },
      "required": [
        "status",
        "channel",
        "message_template",
        "send_dm"
      ],
      "type": "object"
    },
    "Appeals": {
      "additionalProperties": false,
      "properties": {
        "data": {},
        "enabled_categories": {
          "items": {},
          "type": "array"
        },
        "form_questions": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "type": "object"
        },
        "reponses_channel": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "required": [
        "enabled_categories",
        "reponses_channel",
        "form_questions",
        "data"
      ],
      "type": "object"
    },
    "Application": {
      "additionalProperties": false,
      "properties": {
        "accepted_response_template": {
          "anyOf": [
            {
              "$ref": "#/definitions/Message"
            },
            {
              "type": "null"
            }
          ]
        },
        "add_roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "blacklisted_roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cooldown": {
          "type": "number"
        },
        "declined_response_tempalte": {
          "anyOf": [
            {
              "$ref": "#/definitions/Message"
            },
            {
              "type": "null"
            }
          ]
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ping_roels": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/ApplicationQuestion"
          },
          "type": "array"
        },
        "remove_roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "required_roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "response_channel": {
          "type": "string"
        },
        "secondary_guild": {
          "type": [
            "string",
            "null"
          ]
        },
        "status": {
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "id",
        "status",
        "response_channel",
        "questions",
        "required_roles",
        "blacklisted_roles",
        "ping_roels",
        "add_roles",
        "remove_roles",
        "accepted_response_template",
        "declined_response_tempalte",
        "cooldown",
        "secondary_guild"
      ],
      "type": "object"
    },
    "ApplicationQuestion": {
      "additionalProperties": false,
      "properties": {
        "answer_choices": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "answer_type": {
          "type": "string"
        },
        "max_answers": {
          "type": "number"
        },
        "question_text": {
          "type": "string"
        }
      },
      "required": [
        "question_text",
        "answer_type"
      ],
      "type": "object"
    },
    "BSONValue": {
      "additionalProperties": false,
      "type": "object"
    },
    "Button": {
      "additionalProperties": false,
      "properties": {
        "actions": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "template_name": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "template_name"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "color": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "unique_id": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "label",
        "unique_id",
        "color",
        "actions",
        "url",
        "id"
      ],
      "type": "object"
    },
    "Case": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "additionalProperties": false,
          "properties": {
            "active": {
              "type": "boolean"
            },
            "ends_timestamp": {
              "type": [
                "number",
                "null"
              ]
            },
            "type": {
              "type": "string"
            },
            "warn_severity": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "warn_severity",
            "active",
            "ends_timestamp"
          ],
          "type": "object"
        },
        "created_timestamp": {
          "type": "number"
        },
        "duration": {
          "type": [
            "number",
            "null"
          ]
        },
        "humanized_duration": {
          "type": [
            "string",
            "null"
          ]
        },
        "id": {
          "type": "string"
        },
        "moderator_info": {
          "additionalProperties": false,
          "properties": {
            "avatar": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "avatar"
          ],
          "type": "object"
        },
        "moderator_note": {
          "additionalProperties": false,
          "properties": {
            "content": {
              "type": [
                "string",
                "null"
              ]
            },
            "last_edited_user": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "content",
            "last_edited_user"
          ],
          "type": "object"
        },
        "proof": {
          "type": [
            "string",
            "null"
          ]
        },
        "reason": {
          "type": "string"
        },
        "user_info": {
          "additionalProperties": false,
          "properties": {
            "avatar": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "avatar"
          ],
          "type": "object"
        }
      },
      "required": [
        "id",
        "created_timestamp",
        "user_info",
        "reason",
        "proof",
        "action",
        "duration",
        "humanized_duration",
        "moderator_info",
        "moderator_note"
      ],
      "type": "object"
    },
    "EmbedType": {
      "deprecated": "*Embed types should be considered deprecated and might be removed in a future API version*",
      "description": "https://discord.com/developers/docs/resources/channel#embed-object-embed-types",
      "enum": [
        "rich",
        "image",
        "video",
        "gifv",
        "article",
        "link",
        "auto_moderation_message"
      ],
      "type": "string"
    },
    "Guild": {
      "additionalProperties": false,
      "properties": {
        "_id": {
          "$ref": "#/definitions/Long"
        },
        "adwarning_settings": {
          "$ref": "#/definitions/AdWarn"
        },
        "appeals": {
          "$ref": "#/definitions/Appeals"
        },
        "applications": {
          "items": {
            "$ref": "#/definitions/Application"
          },
          "type": "array"
        },
        "bot_logs_channel": {
          "type": [
            "string",
            "null"
          ]
        },
        "cases": {
          "items": {
            "$ref": "#/definitions/Case"
          },
          "type": "array"
        },
        "compact_responses": {
          "type": "boolean"
        },
        "custom_permits": {
          "items": {
            "$ref": "#/definitions/Permit"
          },
          "type": "array"
        },
        "delete_cases_after": {
          "type": "number"
        },
        "flags": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "infraction_tracking": {
          "type": "boolean"
        },
        "mod_stats": {
          "additionalProperties": false,
          "properties": {
            "data": {
              "additionalProperties": {
                "items": {
                  "$ref": "#/definitions/ModStat"
                },
                "type": "array"
              },
              "type": "object"
            },
            "status": {
              "type": "boolean"
            }
          },
          "required": [
            "status",
            "data"
          ],
          "type": "object"
        },
        "prefix": {
          "type": "string"
        },
        "premium": {
          "$ref": "#/definitions/Premium"
        },
        "reports": {
          "additionalProperties": false,
          "properties": {
            "channel": {
              "type": [
                "string",
                "null"
              ]
            },
            "data": {
              "items": {
                "$ref": "#/definitions/Report"
              },
              "type": "array"
            },
            "status": {
              "type": "boolean"
            }
          },
          "required": [
            "status",
            "channel",
            "data"
          ],
          "type": "object"
        },
        "server_language": {
          "type": "string"
        },
        "templates": {
          "additionalProperties": false,
          "properties": {
            "buttons": {
              "items": {
                "$ref": "#/definitions/Button"
              },
              "type": "array"
            },
            "menus": {
              "items": {
                "$ref": "#/definitions/Menu"
              },
              "type": "array"
            },
            "messages": {
              "items": {
                "$ref": "#/definitions/Message"
              },
              "type": "array"
            }
          },
          "required": [
            "messages",
            "buttons",
            "menus"
          ],
          "type": "object"
        },
        "warn_punishments": {
          "items": {
            "$ref": "#/definitions/Punishment"
          },
          "type": "array"
        }
      },
      "required": [
        "_id",
        "prefix",
        "custom_permits",
        "premium",
        "server_language",
        "flags",
        "compact_responses",
        "infraction_tracking",
        "delete_cases_after",
        "cases",
        "warn_punishments",
        "mod_stats",
        "appeals",
        "adwarning_settings",
        "bot_logs_channel",
        "templates",
        "reports",
        "applications"
      ],
      "type": "object"
    },
    "Long": {
      "additionalProperties": false,
      "description": "A class representing a 64-bit integer",
      "properties": {
        "high": {
          "description": "The high 32 bits as a signed value.",
          "type": "number"
        },
        "low": {
          "description": "The low 32 bits as a signed value.",
          "type": "number"
        },
        "unsigned": {
          "description": "Whether unsigned or not.",
          "type": "boolean"
        }
      },
      "required": [
        "high",
        "low",
        "unsigned"
      ],
      "type": "object"
    },
    "Menu": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "options": {
          "items": {
            "$ref": "#/definitions/MenuOption"
          },
          "type": "array"
        },
        "placeholder": {
          "type": "string"
        }
      },
      "required": [
        "placeholder",
        "options",
        "id"
      ],
      "type": "object"
    },
    "MenuOption": {
      "additionalProperties": false,
      "properties": {
        "actions": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "role": {
                "type": "number"
              }
            },
            "required": [
              "name",
              "role"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "emoji": {
          "type": [
            "string",
            "null"
          ]
        },
        "label": {
          "type": "string"
        }
      },
      "required": [
        "label",
        "description",
        "actions",
        "emoji"
      ],
      "type": "object"
    },
    "Message": {
      "additionalProperties": false,
      "properties": {
        "attachments": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "buttons": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "content": {
          "type": "string"
        },
        "embed": {
          "$ref": "#/definitions/APIEmbed"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "id",
        "content",
        "attachments",
        "type",
        "embed",
        "buttons"
      ],
      "type": "object"
    },
    "ModStat": {
      "additionalProperties": false,
      "properties": {
        "adwarnings_issued": {
          "type": "string"
        },
        "bans_issued": {
          "type": "string"
        },
        "kicks_issued": {
          "type": "string"
        },
        "mutes_issued": {
          "type": "string"
        },
        "warnings_issued": {
          "type": "string"
        }
      },
      "required": [
        "adwarnings_issued",
        "warnings_issued",
        "mutes_issued",
        "kicks_issued",
        "bans_issued"
      ],
      "type": "object"
    },
    "Permit": {
      "additionalProperties": false,
      "properties": {
        "locked": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "users": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "name",
        "locked",
        "permissions",
        "roles",
        "users"
      ],
      "type": "object"
    },
    "Premium": {
      "additionalProperties": false,
      "properties": {
        "activated_by": {
          "type": "string"
        },
        "activated_timestamp": {
          "type": [
            "number",
            "null"
          ]
        },
        "end_timestamp": {
          "type": [
            "number",
            "null"
          ]
        },
        "from_code": {
          "type": [
            "string",
            "null"
          ]
        },
        "status": {
          "type": "boolean"
        }
      },
      "required": [
        "status",
        "activated_by",
        "activated_timestamp",
        "end_timestamp",
        "from_code"
      ],
      "type": "object"
    },
    "Punishment": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "type": "string"
        },
        "duration": {
          "type": "number"
        },
        "duration_raw": {
          "type": "string"
        },
        "warningSeverity": {
          "type": "string"
        },
        "warningsCount": {
          "type": "number"
        }
      },
      "required": [
        "warningsCount",
        "duration_raw",
        "duration",
        "warningSeverity",
        "action"
      ],
      "type": "object"
    },
    "Report": {}
  }
}